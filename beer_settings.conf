############################################################################################
###                            Representation Settings                                   ###
############################################################################################

values = null
; Any valid integer or null. If null, the value is calculated instead

genotype = FloatGType
; BinaryGType, FloatGType

phenotype = FloatPType
; BinaryPType, ASCIIPType, FloatPType

############################################################################################
###                                 Some limits                                          ###
############################################################################################

maxGenerations = 2
; Any valid integer

maxChildren = 100
; Any valid integer

maxAdults = 100
; Any valid integer

############################################################################################
###                              Evolution Settings                                      ###
############################################################################################

adultSelection = GenerationMixing
; FullGenerationalReplacement, Overproduction, GenerationMixing

parentSelection = TournamentSelection
; HighestFitness, FitnessProportionate, SigmaScaling, TournamentSelection

elitism = 4
; Number of elites

############################################################################################
###                                  Probability                                         ###
############################################################################################

doubleCrossover = 75
; Any valid integer

mutation = 75
; Any valid integer

crossoverRate = 75
; Any valid integer

tournamentSelection = 75
; Any valid integer

tournamentSize = 10
; Any valid integer

############################################################################################
###                            Neural Network and Flatland                               ###
############################################################################################

network_dimensions = 5, 2
; Sizes in dimensions

network_functions = Softmax, Sigmoid
; Functions for each dimension. Possible values: Argmax, ArgmaxHax, RELU, Sigmoid, Softmax

timesteps = 600
; Number of timesteps

############################################################################################
###                                      Visuals                                         ###
############################################################################################

demo = yes
; Run demo at the end. yes, no

plot = no
; Plot the result. yes, no

############################################################################################
###                                Other settings                                        ###
############################################################################################

settings_scenario_mode = static
; How the scenarios are created. dynamic, static

settings_pheno_range = 2;
; Defines the phenotype range, from -x to x

settings_grid = 10
; Size of the grid. N x N

settings_scenarios = 5
; Number of scenarios

settings_probability_f = 3
; Indicates 1 / x

settings_probability_p = 3
; Indicates 1 / x

settings_minimum_activation_value = 0.1
; Additional settings must be prefixed by 'settings_'
