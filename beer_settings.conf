############################################################################################
###                            Representation Settings                                   ###
############################################################################################

values = null
; Any valid integer or null. If null, the value is calculated instead

genotype = Beer8BitGType
; BinaryGType, FloatGType, Beer8BitGType

phenotype = Beer8BitPType
; BinaryPType, ASCIIPType, FloatPType, Beer8BitPType

############################################################################################
###                                 Some limits                                          ###
############################################################################################

maxGenerations = 40
; Any valid integer

maxChildren = 200
; Any valid integer

maxAdults = 200
; Any valid integer

############################################################################################
###                              Evolution Settings                                      ###
############################################################################################

adultSelection = GenerationMixing
; FullGenerationalReplacement, Overproduction, GenerationMixing

parentSelection = TournamentSelection
; HighestFitness, FitnessProportionate, SigmaScaling, TournamentSelection

elitism = 0
; Number of elites

############################################################################################
###                                  Probability                                         ###
############################################################################################

doubleCrossover = 100
; Any valid 50

mutation = 50
; Any valid integer

crossoverRate = 75
; Any valid integer

tournamentSelection = 40
; Any valid integer

tournamentSize = 10
; Any valid integer

############################################################################################
###                            Neural Network and Flatland                               ###
############################################################################################

network_dimensions = 5, 30, 2
; Sizes in dimensions

network_functions = RELU, RELU
; Functions for each dimension. Possible values: Argmax, ArgmaxHax, RELU, Sigmoid, Softmax

timesteps = 600
; Number of timesteps

############################################################################################
###                                      Visuals                                         ###
############################################################################################

demo = yes
; Run demo at the end. yes, no

plot = no
; Plot the result. yes, no
